plugins {
    id 'java'
    id 'java-library'
    id 'maven-publish'
    id 'com.github.johnrengelman.shadow' version '7.1.0' apply(false)
}
java.sourceCompatibility = JavaVersion.VERSION_1_8
java.targetCompatibility = JavaVersion.VERSION_1_8

wrapper {
    gradleVersion = "7.3.1"
    distributionType = Wrapper.DistributionType.ALL
}


subprojects {
    apply plugin: 'java'
    apply plugin: 'java-library'
    apply plugin: 'maven-publish'
    apply plugin: 'com.github.johnrengelman.shadow'

    group = 'com.github.retrooper'
    description = project.name
    version = '2.0.0-SNAPSHOT'

    project.ext.nettyVersion = '4.1.72.Final'
    project.ext.adventureVersion = '4.10.1'
    project.ext.adventureDependencies=["net.kyori:adventure-api:${adventureVersion}",
                                       "net.kyori:adventure-text-serializer-gson:${adventureVersion}",
                                       "net.kyori:adventure-text-serializer-legacy:${adventureVersion}",
                                       "net.kyori:adventure-nbt:${adventureVersion}"]

    repositories {
        mavenLocal()
        mavenCentral()
        maven { url = 'https://oss.sonatype.org/content/groups/public/' }
    }

    dependencies {
        compileOnly 'org.jetbrains:annotations:23.0.0'
    }

    tasks {
        shadowJar {
            archiveFileName.set("packetevents-${project.name}-${project.version}.jar")
        }

        build {
            dependsOn(shadowJar)
        }

        task sourceJar(type: Jar) {
            from sourceSets.main.allJava
        }

        withType(JavaCompile) {
            options.encoding = 'UTF-8'
        }

        jar.configure {
            classifier = 'default'
        }

        shadowJar.configure {
            classifier = null
        }
    }

    publishing {
        publications {
            mavenJava(MavenPublication) {
                groupId = "com.github.retrooper.packetevents"
                artifactId = project.name
                version = project.version

                from components.java
            }
        }

        repositories {
            maven {
                //TODO UPDATE isRelease boolean to publish to correct repository, for now we publish all to snapshots url
                boolean isRelease = false
                def snapshotUrl = "https://repo.codemc.io/repository/maven-snapshots/"
                def releaseUrl = "https://repo.codemc.io/repository/maven-releases/"

                // Check which URL should be used
                url = isRelease ? releaseUrl : snapshotUrl

                def mavenUsername = System.getenv("retrooper_username") ? System.getenv("retrooper_username") : null
                def mavenPassword = System.getenv("retrooper_password") ? System.getenv("retrooper_password") : null

                if(mavenUsername != null && mavenPassword != null) {
                    credentials {
                        username = mavenUsername
                        password = mavenPassword
                    }
                }
            }
        }
    }
    //So that SNAPSHOT is always the latest SNAPSHOT
    configurations.all {
        resolutionStrategy.cacheDynamicVersionsFor 0, 'seconds'
    }
}
